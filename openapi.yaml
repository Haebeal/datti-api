openapi: 3.0.0
info:
  title: Datti API
  version: 1.0.0
  description: 誰にいくら払ったっけ？を記録するサービス
tags:
  - name: Banks
  - name: Profiles
  - name: Users
  - name: Friends
paths:
  /bank:
    get:
      tags:
        - Banks
      operationId: Banks_getMyBank
      summary: 口座情報の取得
      description: 登録されている口座情報の取得
      parameters: []
      responses:
        '200':
          description: 200レスポンス
          content:
            application/json:
              schema:
                type: object
                required:
                  - bankCode
                  - branchCode
                  - accountCode
                  - createdAt
                  - updatedAt
                  - deletedAt
                properties:
                  bankCode:
                    type: string
                    minLength: 4
                    maxLength: 4
                    description: 金融機関コード
                  branchCode:
                    type: string
                    minLength: 3
                    maxLength: 3
                    description: 支店番号
                  accountCode:
                    type: string
                    minLength: 7
                    maxLength: 7
                    description: 口座番号
                  createdAt:
                    type: string
                    format: date-time
                    description: 作成時間
                  updatedAt:
                    type: string
                    format: date-time
                    description: 更新時間
                  deletedAt:
                    type: string
                    format: date-time
                    nullable: true
                    description: |-
                      削除時間
                      論理削除されていない場合はnull
                description: 正常完了時、レコードを返す場合のボディ
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '404':
          description: 404エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
    post:
      tags:
        - Banks
      operationId: Banks_createMyBank
      summary: 口座情報の登録・更新
      description: 口座情報の登録・更新
      parameters: []
      responses:
        '201':
          description: 201レスポンス
          content:
            application/json:
              schema:
                type: object
                required:
                  - bankCode
                  - branchCode
                  - accountCode
                  - createdAt
                  - updatedAt
                  - deletedAt
                properties:
                  bankCode:
                    type: string
                    minLength: 4
                    maxLength: 4
                    description: 金融機関コード
                  branchCode:
                    type: string
                    minLength: 3
                    maxLength: 3
                    description: 支店番号
                  accountCode:
                    type: string
                    minLength: 7
                    maxLength: 7
                    description: 口座番号
                  createdAt:
                    type: string
                    format: date-time
                    description: 作成時間
                  updatedAt:
                    type: string
                    format: date-time
                    description: 更新時間
                  deletedAt:
                    type: string
                    format: date-time
                    nullable: true
                    description: |-
                      削除時間
                      論理削除されていない場合はnull
                description: 正常完了時、レコードを返す場合のボディ
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank'
    delete:
      tags:
        - Banks
      operationId: Banks_deleteMyBank
      summary: 口座情報の削除
      description: 登録されている口座情報の削除
      parameters: []
      responses:
        '200':
          description: 200レスポンス
          content:
            application/json:
              schema:
                type: object
                required:
                  - bankCode
                  - branchCode
                  - accountCode
                  - createdAt
                  - updatedAt
                  - deletedAt
                properties:
                  bankCode:
                    type: string
                    minLength: 4
                    maxLength: 4
                    description: 金融機関コード
                  branchCode:
                    type: string
                    minLength: 3
                    maxLength: 3
                    description: 支店番号
                  accountCode:
                    type: string
                    minLength: 7
                    maxLength: 7
                    description: 口座番号
                  createdAt:
                    type: string
                    format: date-time
                    description: 作成時間
                  updatedAt:
                    type: string
                    format: date-time
                    description: 更新時間
                  deletedAt:
                    type: string
                    format: date-time
                    nullable: true
                    description: |-
                      削除時間
                      論理削除されていない場合はnull
                description: 正常完了時、レコードを返す場合のボディ
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
  /friends:
    post:
      tags:
        - Friends
      operationId: Friends_sendFriend
      summary: フレンド申請の送信
      description: フレンド申請の送信
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friend'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Friend'
  /me:
    get:
      tags:
        - Profiles
      operationId: Profiles_getProfile
      summary: プロフィール情報の取得
      description: 登録されてるプロフィール情報の取得
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
    put:
      tags:
        - Profiles
      operationId: Profiles_updateProfile
      summary: プロフィール情報の更新
      description: プロフィール情報の更新
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdateRequest'
  /users:
    get:
      tags:
        - Users
      operationId: Users_getUser
      summary: ユーザー情報の取得
      description: メールアドレスによるユーザー情報の取得
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGetRequest'
security:
  - BearerAuth: []
components:
  schemas:
    Bank:
      type: object
      required:
        - bankCode
        - branchCode
        - accountCode
      properties:
        bankCode:
          type: string
          minLength: 4
          maxLength: 4
          description: 金融機関コード
        branchCode:
          type: string
          minLength: 3
          maxLength: 3
          description: 支店番号
        accountCode:
          type: string
          minLength: 7
          maxLength: 7
          description: 口座番号
    Friend:
      type: object
      required:
        - uid
        - friendUid
      properties:
        uid:
          type: string
          minLength: 28
          maxLength: 28
          description: フレンド申請送信者のユーザーID
        friendUid:
          type: string
          minLength: 28
          maxLength: 28
          description: フレンド申請受信者のユーザーID
    Profile:
      type: object
      required:
        - uid
        - name
        - photoUrl
      properties:
        uid:
          type: string
          minLength: 28
          maxLength: 28
          description: ユーザーID
        name:
          type: string
          description: ユーザー名
        photoUrl:
          type: string
          description: 画像URL
    ProfileUpdateRequest:
      type: object
      required:
        - name
        - photoUrl
      properties:
        name:
          type: string
          description: ユーザー名
        photoUrl:
          type: string
          description: 画像URL
    User:
      type: object
      required:
        - uid
        - name
        - photoUrl
      properties:
        uid:
          type: string
          minLength: 28
          maxLength: 28
          description: ユーザーID
        name:
          type: string
          description: ユーザー名
        photoUrl:
          type: string
          description: 画像URL
    UserGetRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          description: メールアドレス
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
servers:
  - url: https://datti-api-dev.fly.dev
    description: 開発環境
    variables: {}
  - url: https://datti-api.haebeal.net
    description: 本番環境
    variables: {}
