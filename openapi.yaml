openapi: 3.0.0
info:
  title: Datti API
  version: 1.0.0
  description: 誰にいくら払ったっけ？を記録するサービス
tags:
  - name: Users
  - name: Friends
  - name: Groups
  - name: Events
paths:
  /friends:
    get:
      tags:
        - Friends
      operationId: FriendEndpoints_getFriend
      summary: フレンドのユーザーを取得
      description: フレンドのユーザーを取得
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friends'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
  /friends/pendings:
    get:
      tags:
        - Friends
      operationId: FriendEndpoints_getPendingFriendRequest
      summary: フレンド申請未承認のユーザーを取得
      description: フレンド申請未承認のユーザーを取得
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friends'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
  /friends/requests:
    get:
      tags:
        - Friends
      operationId: FriendEndpoints_getFriendRequest
      summary: フレンド申請中のユーザーを取得
      description: フレンド申請中のユーザーを取得
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friends'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
  /friends/{userId}:
    delete:
      tags:
        - Friends
      operationId: FriendEndpoints_unRegisterFriend
      summary: フレンドの登録解除
      description: フレンドの登録解除
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200レスポンス
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                description: 正常完了時、メッセージのみを返す場合のボディ
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
  /groups:
    get:
      tags:
        - Groups
      operationId: GroupEndpoints_getGroups
      summary: 所属しているグループ情報の取得
      description: 所属しているグループの取得
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
    post:
      tags:
        - Groups
      operationId: GroupEndpoints_postGroup
      summary: グループの作成
      description: グループの作成
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreateRequest'
  /groups/{groupId}:
    get:
      tags:
        - Groups
      operationId: GroupEndpoints_getGroup
      summary: グループ情報の取得
      description: グループ情報の取得
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
    put:
      tags:
        - Groups
      operationId: GroupEndpoints_putGroup
      summary: グループ情報の更新
      description: グループ情報の更新
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdateRequest'
  /groups/{groupId}/events:
    get:
      tags:
        - Events
      operationId: EventEndpoints_getEventsByGid
      summary: グループIDに紐づくイベント情報の取得
      description: グループIDに紐づくイベント情報の取得
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
    post:
      tags:
        - Events
      operationId: EventEndpoints_createEvent
      summary: イベント情報の登録
      description: イベント情報の登録
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreateRequest'
  /groups/{groupId}/events/{eventId}:
    get:
      tags:
        - Events
      operationId: EventEndpoints_getEvent
      summary: イベントIDに紐づくイベント情報の取得
      description: 登録されているイベント情報の取得
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
    put:
      tags:
        - Events
      operationId: EventEndpoints_updateEvent
      summary: イベント情報の更新
      description: イベント情報の更新
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventUpdateRequest'
    delete:
      tags:
        - Events
      operationId: EventEndpoints_deleteEvent
      summary: イベント情報の削除
      description: イベント情報の削除
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200レスポンス
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                description: 正常完了時、メッセージのみを返す場合のボディ
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
  /groups/{groupId}/members:
    get:
      tags:
        - Groups
      operationId: GroupEndpoints_getGroupMembers
      summary: グループに対するメンバー情報の取得
      description: グループに対するメンバー情報の取得
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMembers'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
    post:
      tags:
        - Groups
      operationId: GroupEndpoints_registedUsers
      summary: グループに対するメンバーの招待
      description: グループに対するメンバーの追加
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Members'
  /users:
    get:
      tags:
        - Users
      operationId: Users_getUserByEmail
      summary: メールアドレスによるユーザー情報の取得
      description: メールアドレスによるユーザー情報の取得
      parameters:
        - name: email
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
  /users/me:
    get:
      tags:
        - Users
      operationId: Users_getMe
      summary: ユーザー情報（自分）の取得
      description: ユーザー情報の取得
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
    put:
      tags:
        - Users
      operationId: Users_updateMe
      summary: ユーザー情報（自分）の更新
      description: ユーザー情報の更新
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
  /users/{userId}:
    get:
      tags:
        - Users
      operationId: Users_getUserByUid
      summary: UIDによるユーザー情報の取得
      description: プロフィール情報の取得
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
  /users/{userId}/requests:
    post:
      tags:
        - Users
      operationId: Users_friendRequest
      summary: フレンド申請の送信
      description: フレンド申請の送信
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: 201レスポンス
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                description: 正常完了時、メッセージのみを返す場合のボディ
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
security:
  - BearerAuth: []
components:
  schemas:
    EventCreateRequest:
      type: object
      required:
        - name
        - evented_at
        - paid_by
        - amount
        - payments
      properties:
        name:
          type: string
          description: イベント名
        evented_at:
          type: string
          format: date-time
          description: イベントの日付
        paid_by:
          type: string
          description: 立て替えたユーザー
        amount:
          type: integer
          description: 立て替えた金額
        payments:
          type: array
          items:
            type: object
            properties:
              paid_to:
                type: string
              amount:
                type: integer
            required:
              - paid_to
              - amount
          description: 立て替えてもらったユーザー
    EventResponse:
      type: object
      required:
        - id
        - name
        - evented_at
        - created_by
        - paid_by
        - amount
        - paymetns
        - group_id
      properties:
        id:
          type: string
        name:
          type: string
        evented_at:
          type: string
          format: date-time
        created_by:
          type: string
        paid_by:
          type: string
        amount:
          type: integer
        paymetns:
          type: array
          items:
            type: object
            properties:
              payment_id:
                type: string
              paid_to:
                type: string
              amount:
                type: string
            required:
              - payment_id
              - paid_to
              - amount
        group_id:
          type: string
    EventUpdateRequest:
      type: object
      required:
        - name
        - evented_at
        - paid_by
        - amount
        - payments
      properties:
        name:
          type: string
          description: イベント名
        evented_at:
          type: string
          format: date-time
          description: イベントの日付
        paid_by:
          type: string
          description: 立て替えたユーザー
        amount:
          type: integer
          description: 立て替えた金額
        payments:
          type: array
          items:
            type: object
            properties:
              payment_id:
                type: string
              paid_to:
                type: string
              amount:
                type: integer
            required:
              - payment_id
              - paid_to
              - amount
          description: 立て替えてもらったユーザー
    EventsResponse:
      type: object
      required:
        - events
      properties:
        events:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              evented_at:
                type: string
                format: date-time
              paid_by:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                required:
                  - id
                  - name
              amount:
                type: integer
            required:
              - id
              - name
              - evented_at
              - paid_by
              - amount
    Friends:
      type: object
      required:
        - users
      properties:
        users:
          type: array
          items:
            type: object
            properties:
              uid:
                type: string
                minLength: 28
                maxLength: 28
                description: ユーザーID
              name:
                type: string
                description: ユーザー名
              email:
                type: string
                description: メールアドレス
              photoUrl:
                type: string
                description: 画像URL
            required:
              - uid
              - name
              - email
              - photoUrl
    Group:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: グループID
        name:
          type: string
          description: グループ名
    GroupCreateRequest:
      type: object
      required:
        - name
        - uids
      properties:
        name:
          type: string
          description: グループ名
        uids:
          type: array
          items:
            type: string
          description: UID
    GroupMembers:
      type: object
      required:
        - members
      properties:
        members:
          type: array
          items:
            type: object
            properties:
              uid:
                type: string
                minLength: 28
                maxLength: 28
                description: ユーザーID
              name:
                type: string
                description: ユーザー名
              email:
                type: string
                description: メールアドレス
              photoUrl:
                type: string
                description: 画像URL
              status:
                type: string
                enum:
                  - me
                  - applying
                  - requesting
                  - none
                  - applying
                  - requesting
                  - none
                description: フレンド状態のステータス
            required:
              - uid
              - name
              - email
              - photoUrl
              - status
    GroupUpdateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: グループ名
    Groups:
      type: object
      required:
        - groups
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
          description: グループ
    Members:
      type: object
      required:
        - uids
      properties:
        uids:
          type: array
          items:
            type: string
          description: UID
    User:
      type: object
      required:
        - uid
        - name
        - email
        - photoUrl
        - status
      properties:
        uid:
          type: string
          minLength: 28
          maxLength: 28
          description: ユーザーID
        name:
          type: string
          description: ユーザー名
        email:
          type: string
          description: メールアドレス
        photoUrl:
          type: string
          description: 画像URL
        status:
          type: string
          enum:
            - me
            - applying
            - requesting
            - none
            - applying
            - requesting
            - none
          description: フレンド状態のステータス
    UserUpdateRequest:
      type: object
      required:
        - name
        - photoUrl
      properties:
        name:
          type: string
          description: ユーザー名
        photoUrl:
          type: string
          description: 画像URL
    UsersResponse:
      type: object
      required:
        - users
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
servers:
  - url: https://datti-api-dev.fly.dev
    description: 開発環境
    variables: {}
  - url: https://datti-api.haebeal.net
    description: 本番環境
    variables: {}
