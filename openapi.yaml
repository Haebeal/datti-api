openapi: 3.0.0
info:
  title: Datti API
  description: 誰にいくら払ったっけ？を記録するサービス
  version: 0.0.0
tags:
  - name: Users
  - name: Groups
  - name: Events
  - name: Payments
paths:
  /groups:
    get:
      tags:
        - Groups
      operationId: GroupEndpoints_getGroups
      summary: 所属しているグループ情報の取得
      description: 所属しているグループの取得
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEndpoints.GroupsGetResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
    post:
      tags:
        - Groups
      operationId: GroupEndpoints_postGroup
      summary: グループの作成
      description: グループの作成
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEndpoints.GroupGetResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupEndpoints.GroupPostRequest'
  /groups/{groupId}:
    get:
      tags:
        - Groups
      operationId: GroupEndpoints_getGroup
      summary: グループ情報の取得
      description: グループ情報の取得
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEndpoints.GroupGetResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
    put:
      tags:
        - Groups
      operationId: GroupEndpoints_putGroup
      summary: グループ情報の更新
      description: グループ情報の更新
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEndpoints.GroupGetResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupEndpoints.GroupPutRequest'
  /groups/{groupId}/events:
    get:
      tags:
        - Events
      operationId: EventEndpoints_getEventsByGid
      summary: グループIDに紐づくイベント情報の取得
      description: グループIDに紐づくイベント情報の取得
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventEndpoints.EventsResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
    post:
      tags:
        - Events
      operationId: EventEndpoints_createEvent
      summary: イベント情報の登録
      description: イベント情報の登録
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventEndpoints.EventResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventEndpoints.EventPostRequest'
  /groups/{groupId}/events/{eventId}:
    get:
      tags:
        - Events
      operationId: EventEndpoints_getEvent
      summary: イベントIDに紐づくイベント情報の取得
      description: 登録されているイベント情報の取得
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventEndpoints.EventResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
    put:
      tags:
        - Events
      operationId: EventEndpoints_updateEvent
      summary: イベント情報の更新
      description: イベント情報の更新
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventEndpoints.EventResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventEndpoints.EventPutRequest'
    delete:
      tags:
        - Events
      operationId: EventEndpoints_deleteEvent
      summary: イベント情報の削除
      description: イベント情報の削除
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200レスポンス
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                description: 正常完了時、メッセージのみを返す場合のボディ
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
  /groups/{groupId}/members:
    get:
      tags:
        - Groups
      operationId: GroupEndpoints_getGroupMembers
      summary: グループに対するメンバー情報の取得
      description: グループに対するメンバー情報の取得
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - me
              - applying
              - requesting
              - friend
              - none
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEndpoints.MembersGetResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
    post:
      tags:
        - Groups
      operationId: GroupEndpoints_registedUsers
      summary: グループに対するメンバーの招待
      description: グループに対するメンバーの追加
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEndpoints.GroupGetResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupEndpoints.MembersPostRequest'
  /payments:
    get:
      tags:
        - Payments
      operationId: PaymentEndpoints_getPayments
      summary: 支払い一覧情報の取得
      description: 支払い一覧情報の取得
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentUsers'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
    post:
      tags:
        - Payments
      operationId: PaymentEndpoints_postPayments
      summary: 支払い情報の登録
      description: 支払い情報の登録
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
  /payments/history:
    get:
      tags:
        - Payments
      operationId: PaymentEndpoints_getHistory
      summary: 支払い履歴の取得
      description: 返済履歴の取得
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
  /payments/{payId}:
    get:
      tags:
        - Payments
      operationId: PaymentEndpoints_getPayment
      summary: 支払い情報の取得
      description: 支払い情報の取得
      parameters:
        - name: payId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
    put:
      tags:
        - Payments
      operationId: PaymentEndpoints_putPayments
      summary: 支払い情報の更新
      description: 支払い情報の更新
      parameters:
        - name: payId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentUpdate'
  /users:
    get:
      tags:
        - Users
      operationId: UserEndpoints_getUserByEmail
      summary: ユーザー情報の取得
      description: メールアドレスによるユーザー情報の取得
      parameters:
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - me
              - applying
              - requesting
              - friend
              - none
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEndpoints.UsersGetResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
  /users/friends/{userId}:
    delete:
      tags:
        - Users
      operationId: UserEndpoints_unRegisterFriend
      summary: フレンドの登録解除
      description: フレンドの登録解除
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200レスポンス
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                description: 正常完了時、メッセージのみを返す場合のボディ
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
  /users/me:
    get:
      tags:
        - Users
      operationId: UserEndpoints_getMe
      summary: ユーザー情報（自分）の取得
      description: ユーザー情報の取得
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEndpoints.UserGetResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
    put:
      tags:
        - Users
      operationId: UserEndpoints_updateMe
      summary: ユーザー情報（自分）の更新
      description: ユーザー情報の更新
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEndpoints.UserGetResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEndpoints.UserPutRequest'
  /users/{userId}:
    get:
      tags:
        - Users
      operationId: UserEndpoints_getUserByUid
      summary: UIDによるユーザー情報の取得
      description: プロフィール情報の取得
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEndpoints.UserGetResponse'
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
  /users/{userId}/requests:
    post:
      tags:
        - Users
      operationId: UserEndpoints_friendRequest
      summary: フレンド申請の送信
      description: フレンド申請の送信
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: 201レスポンス
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                description: 正常完了時、メッセージのみを返す場合のボディ
        '401':
          description: 401エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
        '500':
          description: 500エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                description: エラーレスポンスのボディ
security:
  - BearerAuth: []
components:
  schemas:
    Event:
      type: object
    EventEndpoints.EventPostRequest:
      type: object
      required:
        - name
        - evented_at
        - paid_by
        - amount
        - payments
      properties:
        name:
          type: string
          description: イベント名
        evented_at:
          type: string
          format: date-time
          description: イベントの日付
        paid_by:
          type: string
          description: 立て替えたユーザー
        amount:
          type: integer
          description: 立て替えた金額
        payments:
          type: array
          items:
            type: object
            properties:
              paid_to:
                type: string
              amount:
                type: integer
            required:
              - paid_to
              - amount
          description: 立て替えてもらったユーザー
    EventEndpoints.EventPutRequest:
      type: object
      required:
        - name
        - evented_at
        - paid_by
        - amount
        - payments
      properties:
        name:
          type: string
          description: イベント名
        evented_at:
          type: string
          format: date-time
          description: イベントの日付
        paid_by:
          type: string
          description: 立て替えたユーザー
        amount:
          type: integer
          description: 立て替えた金額
        payments:
          type: array
          items:
            type: object
            properties:
              payment_id:
                type: string
              paid_to:
                type: string
              amount:
                type: integer
            required:
              - paid_to
              - amount
          description: 立て替えてもらったユーザー
    EventEndpoints.EventResponse:
      type: object
      required:
        - id
        - name
        - evented_at
        - created_by
        - paid_by
        - amount
        - paymetns
        - group_id
      properties:
        id:
          type: string
        name:
          type: string
        evented_at:
          type: string
          format: date-time
        created_by:
          type: string
        paid_by:
          type: string
        amount:
          type: integer
        paymetns:
          type: array
          items:
            type: object
            properties:
              payment_id:
                type: string
              paid_to:
                type: string
              amount:
                type: string
            required:
              - payment_id
              - paid_to
              - amount
        group_id:
          type: string
    EventEndpoints.EventsResponse:
      type: object
      required:
        - events
      properties:
        events:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              evented_at:
                type: string
                format: date-time
              paid_by:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                required:
                  - id
                  - name
              amount:
                type: integer
            required:
              - id
              - name
              - evented_at
              - paid_by
              - amount
    Group:
      type: object
      required:
        - groupId
        - name
      properties:
        groupId:
          type: string
          description: グループID
        name:
          type: string
          description: グループ名
    GroupEndpoints.GroupGetResponse:
      type: object
      required:
        - groupId
        - name
      properties:
        groupId:
          type: string
          description: グループID
        name:
          type: string
          description: グループ名
    GroupEndpoints.GroupPostRequest:
      type: object
      required:
        - name
        - userIds
      properties:
        name:
          type: string
          description: グループ名
        userIds:
          type: array
          items:
            type: string
          description: ユーザーID
    GroupEndpoints.GroupPutRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: グループ名
    GroupEndpoints.GroupsGetResponse:
      type: object
      required:
        - groups
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
          description: グループ
    GroupEndpoints.MembersGetResponse:
      type: object
      required:
        - members
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/Member'
    GroupEndpoints.MembersPostRequest:
      type: object
      required:
        - userIds
      properties:
        userIds:
          type: array
          items:
            type: string
          description: ユーザーID
    Member:
      type: object
      required:
        - userId
        - name
        - email
        - photoUrl
        - status
      properties:
        userId:
          type: string
          minLength: 28
          maxLength: 28
          description: ユーザーID
        name:
          type: string
          description: ユーザー名
        email:
          type: string
          description: メールアドレス
        photoUrl:
          type: string
          description: 画像URL
        status:
          type: string
          enum:
            - me
            - applying
            - requesting
            - friend
            - none
          description: フレンド状態のステータス
    Payment:
      type: object
      required:
        - id
        - paid_at
        - paid_to
        - paid_by
        - amount
      properties:
        id:
          type: string
          description: 支払いID
        paid_at:
          type: string
          format: date-time
          description: 支払い日
        paid_to:
          type: object
          required:
            - userId
            - name
            - email
            - photoUrl
          properties:
            userId:
              type: string
              minLength: 28
              maxLength: 28
              description: ユーザーID
            name:
              type: string
              description: ユーザー名
            email:
              type: string
              description: メールアドレス
            photoUrl:
              type: string
              description: 画像URL
          description: 支払い先のユーザー情報
        paid_by:
          type: object
          required:
            - userId
            - name
            - email
            - photoUrl
          properties:
            userId:
              type: string
              minLength: 28
              maxLength: 28
              description: ユーザーID
            name:
              type: string
              description: ユーザー名
            email:
              type: string
              description: メールアドレス
            photoUrl:
              type: string
              description: 画像URL
          description: 支払い元のユーザー情報
        amount:
          type: integer
          description: 支払い金額
    PaymentCreate:
      type: object
      required:
        - paid_at
        - paid_to
        - amount
      properties:
        paid_at:
          type: string
          format: date-time
          description: 支払い日
        paid_to:
          type: string
          description: 支払い先のユーザ-ID
        amount:
          type: integer
          description: 支払い金額
    PaymentUpdate:
      type: object
      required:
        - paid_at
        - paid_to
        - paid_by
        - amount
      properties:
        paid_at:
          type: string
          format: date-time
          description: 支払い日
        paid_to:
          type: string
          description: 支払い先のユーザ-ID
        paid_by:
          type: string
          description: 支払い元のユーザー
        amount:
          type: integer
          description: 支払い金額
    PaymentUser:
      type: object
      required:
        - user
        - amount
      properties:
        user:
          type: object
          required:
            - userId
            - name
            - email
            - photoUrl
          properties:
            userId:
              type: string
              minLength: 28
              maxLength: 28
              description: ユーザーID
            name:
              type: string
              description: ユーザー名
            email:
              type: string
              description: メールアドレス
            photoUrl:
              type: string
              description: 画像URL
          description: ユーザー情報
        amount:
          type: integer
          description: 支払い額
    PaymentUsers:
      type: object
      required:
        - payments
      properties:
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentUser'
    User:
      type: object
      required:
        - userId
        - name
        - email
        - photoUrl
        - status
      properties:
        userId:
          type: string
          minLength: 28
          maxLength: 28
          description: ユーザーID
        name:
          type: string
          description: ユーザー名
        email:
          type: string
          description: メールアドレス
        photoUrl:
          type: string
          description: 画像URL
        status:
          type: string
          enum:
            - me
            - applying
            - requesting
            - friend
            - none
          description: フレンド状態のステータス
    UserEndpoints.Friends:
      type: object
      required:
        - users
      properties:
        users:
          type: array
          items:
            type: object
            properties:
              userId:
                type: string
                minLength: 28
                maxLength: 28
                description: ユーザーID
              name:
                type: string
                description: ユーザー名
              email:
                type: string
                description: メールアドレス
              photoUrl:
                type: string
                description: 画像URL
            required:
              - userId
              - name
              - email
              - photoUrl
    UserEndpoints.UserGetResponse:
      type: object
      required:
        - userId
        - name
        - email
        - photoUrl
        - status
      properties:
        userId:
          type: string
          minLength: 28
          maxLength: 28
          description: ユーザーID
        name:
          type: string
          description: ユーザー名
        email:
          type: string
          description: メールアドレス
        photoUrl:
          type: string
          description: 画像URL
        status:
          type: string
          enum:
            - me
            - applying
            - requesting
            - friend
            - none
          description: フレンド状態のステータス
    UserEndpoints.UserPutRequest:
      type: object
      required:
        - name
        - photoUrl
      properties:
        name:
          type: string
          description: ユーザー名
        photoUrl:
          type: string
          description: 画像URL
    UserEndpoints.UsersGetResponse:
      type: object
      required:
        - users
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
servers:
  - url: https://datti-api-dev.fly.dev
    description: 開発環境
    variables: {}
  - url: https://datti-api.haebeal.net
    description: 本番環境
    variables: {}
