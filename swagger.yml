swagger: '2.0'
info:
  title: Datti API
  description: 割り勘サービスDattiのWebAPI
  version: 1.0.0
host: datti.net
basePath: /api
schemes:
  - https
produces:
  - application/json

# API GateWaynの独自セクション
# corsのセクション
x-google-endpoints:
  - name: "ignore cors"
    allowCors: True
# 認証のセクション
# securityDefinitions:
#   google_id_token:
#     authorizationUrl: ""
#     flow: "implicit"
#     type: "oauth2"
#     x-google-issuer: "https://accounts.google.com"
#     x-google-jwks_uri: "https://www.googleapis.com/oauth2/v3/certs"
#     x-google-audiences: "811974289373-2hp30dkitujdqh6402ckibg442fj94ph.apps.googleusercontent.com"
#   firebase:
#     authorizationUrl: ""
#     flow: "implicit"
#     type: "oauth2"
#     x-google-issuer: "https://securetoken.google.com/api-gateway-demo-404010"
#     x-google-jwks_uri: "https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com"
#     x-google-audiences: "api-gateway-demo-404010"

# エンドポイントの定義
paths:
  /me:
    options:
      summary: cors許可
      operationId: corsMe
      x-google-backend:
        address: "https://datti-api-dev-2x3cgngjuq-an.a.run.app/me"
      responses:
        '200':
          description: 成功
          schema:
            type: string
    get: 
      summary: ユーザーの取得
      operationId: getUserInfo
      x-google-backend:
        address: "https://datti-api-dev-2x3cgngjuq-an.a.run.app/me"
      tags: 
        - Users
      responses:
        200:
          description: 成功
          schema:
            $ref: '#/definitions/UserResponse'
        404:
          description: ユーザーが存在しない場合
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: サーバーの内部エラー
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      summary: ユーザーの作成
      operationId: createUserInfo
      x-google-backend:
        address: "https://datti-api-dev-2x3cgngjuq-an.a.run.app/me"
      tags:
        - Users
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        201:
          description: ユーザーの作成に成功
          schema:
            $ref: '#/definitions/UserResponse'
        400:
          description: 不正なリクエスト内容
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 内部エラー
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      summary: ユーザーの更新
      operationId: updateUserInfo
      x-google-backend:
        address: "https://datti-api-dev-2x3cgngjuq-an.a.run.app/me"
      tags:
        - Users
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: ユーザーの更新成功
          schema:
            $ref: '#/definitions/UserResponse'
        400:
          description: 不正なリクエスト内容
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 内部エラー
          schema:
            $ref: '#/definitions/ErrorResponse'
  # /me/bank:
  #   get:
  #     summary: Get bank account information
  #     tags:
  #       - Banks
  #     responses:
  #       200:
  #         description: Successful operation
  #         schema:
  #           $ref: '#/definitions/BankAccountResponse'
  #       500:
  #         description: Internal Server Error
  #         schema:
  #           $ref: '#/definitions/ErrorResponse'
  #   post:
  #     summary: Create a new bank account
  #     tags:
  #       - Banks
  #     parameters:
  #       - name: bank_account
  #         in: body
  #         required: true
  #         schema:
  #           $ref: '#/definitions/BankAccount'
  #     responses:
  #       201:
  #         description: Bank account created successfully
  #         schema:
  #           $ref: '#/definitions/BankAccountResponse'
  #       400:
  #         description: Bad Request
  #         schema:
  #           $ref: '#/definitions/ErrorResponse'
  #       500:
  #         description: Internal Server Error
  #         schema:
  #           $ref: '#/definitions/ErrorResponse'
  #   put:
  #     summary: Update bank account information
  #     tags:
  #       - Banks
  #     parameters:
  #       - name: bank_account
  #         in: body
  #         required: true
  #         schema:
  #           $ref: '#/definitions/BankAccount'
  #     responses:
  #       200:
  #         description: Bank account updated successfully
  #         schema:
  #           $ref: '#/definitions/BankAccountResponse'
  #       400:
  #         description: Bad Request
  #         schema:
  #           $ref: '#/definitions/ErrorResponse'
  #       500:
  #         description: Internal Server Error
  #         schema:
  #           $ref: '#/definitions/ErrorResponse'

  # /groups:
  #   get:
  #     summary: Get a list of groups
  #     tags:
  #       - Groups
  #     responses:
  #       200:
  #         description: Successful operation
  #         schema:
  #           $ref: '#/definitions/GroupsResponse'
  #       500:
  #         description: Internal Server Error
  #         schema:
  #           $ref: '#/definitions/ErrorResponse'
  #   post:
  #     summary: Create a new group
  #     tags:
  #       - Groups
  #     parameters:
  #       - name: group
  #         in: body
  #         required: true
  #         schema:
  #           $ref: '#/definitions/Group'
  #     responses:
  #       201:
  #         description: Group created successfully
  #         schema:
  #           $ref: '#/definitions/GroupResponse'
  #       400:
  #         description: Bad Request
  #         schema:
  #           $ref: '#/definitions/ErrorResponse'
  #       500:
  #         description: Internal Server Error
  #         schema:
  #           $ref: '#/definitions/ErrorResponse'

  # /groups/{id}:
  #   get:
  #     summary: Get group information by ID
  #     tags:
  #       - Groups
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #     responses:
  #       200:
  #         description: Successful operation
  #         schema:
  #           $ref: '#/definitions/GroupResponse'
  #       404:
  #         description: Group not found
  #         schema:
  #           $ref: '#/definitions/ErrorResponse'
  #       500:
  #         description: Internal Server Error
  #         schema:
  #           $ref: '#/definitions/ErrorResponse'
  #   put:
  #     summary: Update group information by ID
  #     tags:
  #       - Groups
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #       - name: group
  #         in: body
  #         required: true
  #         schema:
  #           $ref: '#/definitions/Group'
  #     responses:
  #       200:
  #         description: Group updated successfully
  #         schema:
  #           $ref: '#/definitions/GroupResponse'
  #       400:
  #         description: Bad Request
  #         schema:
  #           $ref: '#/definitions/ErrorResponse'
  #       500:
  #         description: Internal Server Error
  #         schema:
  #           $ref: '#/definitions/ErrorResponse'

definitions:
  User:
    type: object
    properties:
      id:
        type: string
      email:
        type: string
      

  BankAccount:
    type: object
    properties:
      id:
        type: string
      accountCode:
        type: string
      bankCode:
        type: string
      brachCode:
        type: string

  Group:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      #  Add other properties as needed

  UserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/User'

  BankAccountResponse:
    type: object
    properties:
      bank_account:
        $ref: '#/definitions/BankAccount'
        type: string

  GroupsResponse:
    type: object
    properties:
      groups:
        type: array
        items:
          $ref: '#/definitions/Group'

  GroupResponse:
    type: object
    properties:
      group:
        $ref: '#/definitions/Group'

  ErrorResponse:
    type: object
    properties:
      error:
        type: string